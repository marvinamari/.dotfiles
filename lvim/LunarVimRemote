# To build this image:
# docker build -f LunarVimRemote . -t lunarvim:remote
# To run this image from project root
# docker build -t devworkspace .
# docker run --name devworkspace -w /workspace -v ${PWD}:/workspace -d devworkspace
# https://github.com/mfussenegger/nvim-dap/wiki/Local-and-Remote-Debugging-with-Docker#Python
FROM ubuntu:latest

SHELL ["/bin/bash", "-c"]
# Build argument to point to correct branch on GitHub
ARG LV_BRANCH=release-1.3/neovim-0.9

# Set environment correctly
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/root/.local/bin:/root/.cargo/bin:/root/.npm-global/bin${PATH}"
ENV CFLAGS=-I/usr/include/openssl 
ENV LDFLAGS=-L/usr/lib
ENV PYTHON_VERSION 3.11.4
ENV NVM_DIR /root/.nvm
ENV NODE_VERSION 18.16.1

# Install dependencies and LunarVim
RUN apt update && \
  apt -y install sudo curl build-essential git fzf python3-dev python3-pip cargo iputils-ping software-properties-common wget gcc && \
  curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
  apt update && \
  apt -y install nodejs && \
  apt clean && rm -rf /var/lib/apt/lists/* /tmp/* && \
  curl -LSs https://raw.githubusercontent.com/lunarvim/lunarvim/${LV_BRANCH}/utils/installer/install-neovim-from-release | bash && \
  LV_BRANCH=${LV_BRANCH} curl -LSs https://raw.githubusercontent.com/lunarvim/lunarvim/${LV_BRANCH}/utils/installer/install.sh | bash -s -- --no-install-dependencies


# Copy config
COPY . /root/.config/lvim

#Set of all dependencies needed for pyenv to work on Ubuntu
RUN apt-get update \ 
        && apt-get install -y --no-install-recommends make libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget ca-certificates \
        llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev mecab-ipadic-utf8

# Set-up necessary Env vars for PyEnv
ENV PYENV_ROOT /root/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

# Install pyenv
RUN set -ex \
    && curl https://pyenv.run | bash \
    && pyenv update \
    && pyenv install $PYTHON_VERSION \
    && pyenv global $PYTHON_VERSION \
    && pyenv rehash

# Install nvm
RUN set -ex \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    && . $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default

# Set environment variables
ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

RUN npm install -g yarn

# Setup LVIM to run on startup
ENTRYPOINT ["/bin/bash"]
CMD ["lvim"]

# vim: ft=dockerfile:
